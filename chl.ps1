# checks against 03-2021 exchange exploits


function build_logname(){
    return (Get-Date).ToString("MM/dd/yyyy-hh-mm-ss") + "-haf.log"
}

# checks if found stuff happened in the last 2 days
function check_logdate($logpath){

    $f = (Get-Content -Path $logpath) | select -skip 2

    $unsafe = $false

    foreach ($e in $f){
        $today = (Get-Date).ToString("dd")
        $yesterday = (Get-Date).AddDays(-1).ToString("dd")

        $logday = $e.Split(",")[0].Split("T")[0].Split("-")[-1]
        if ($logday -eq $yesterday -Or $logday -eq $yesterday){
            $unsafe = $true
        }
    }

    return $unsafe
}

# get exchange installation path
$exchangePath = (Get-ItemProperty -Path Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\ExchangeServer\v15\Setup).MsiInstallPath

function check26855() {
    $files = (Get-ChildItem -Recurse -Path "$exchangePath\Logging\HttpProxy" -Filter '*.log').FullName
    $allResults = @()
    $files | ForEach-Object {
        $count++
        $f = Get-ChildItem $_ -ErrorAction SilentlyContinue
        Write-Host $count - $f
        if (($f | Select-String "ServerInfo~").Count -gt 0) {
            $fileResults = @(Import-Csv -Path $_ -ErrorAction SilentlyContinue | Where-Object { $_.AuthenticatedUser -eq '' -and $_.AnchorMailbox -like 'ServerInfo~*/*'})
            $fileResults | ForEach-Object {
                $allResults += $_
            }
        }
    }

    if ($allResults.Length -gt 0) {
        if (Test-Path "$PSScriptRoot\CVE-2021-26855.log") {
            Remove-Item $PSScriptRoot\CVE-2021-26855.log -Force
        }
        $logname = build_logname
        $allResults | Select-Object DateTime, AuthenticatedUser, AnchorMailbox | Export-Csv $PSScriptRoot\$logname
        $unsafe = check_logdate($PSScriptRoot+"\"+$logname)
        return $unsafe
    }
}


function check26858() {
    $logs = Get-ChildItem -Recurse -Path "$exchangePath\Logging\OABGeneratorLog" | Select-String "Download failed and temporary file" -List | Select-Object Path
    if ($logs.Path.Count -gt 0) {
        Write-Host "[26858] Suspicious OABGenerator logs found at " $logs.Path
        write path into file
        return $true
    }
    else {
        return $false
    }
}

function check26857() {
    $eventLogs = Get-EventLog -LogName Application -Source "MSExchange Unified Messaging" -EntryType Error -ErrorAction SilentlyContinue | Where-Object { $_.Message -like "*System.InvalidCastException*" }
    if ($eventLogs.Count -gt 0) {
        return $true
    }
    else {
        return $false
    }
}

function check27065() {
    $logs = Get-ChildItem -Recurse -Path "$exchangePath\Logging\ECP\Server\*.log" | Select-String "Set-.*VirtualDirectory" -List | Select-Object Path
    if ($logs.Path.Count -gt 0) {
        Write-Host "Suspicious virtual directory found:" $logs.Path

        return $true
    }
    else {
        return $false
    }
}

$txt = ""

$critical = $false

if (check26855){
    $txt += "[26855] Suspicious HttpProxy logs!`n"
    $critical = $true
}
else {
    $txt += "[26855] OK`n"
}
# ----------------------------
if (check26858){
    $txt += "[26858] Suspicious OABGenerator logs!`n"
    $critical = $true
}
else {
    $txt += "[26858] OK`n"
}
# ----------------------------
if (check26857){
    $txt += "[26857] Suspicious Event logs!`n"
    $critical = $true
}
else {
    $txt += "[26857] OK`n"
}
# ----------------------------
if (check27065){
    $txt += "[27065] Suspicious Virtual Server logs!"
    $critical = $true
}
else {
    $txt += "[27065] OK"
}

Write-Host $txt

if ($critical){
    return 2
}
else {
    return 0
}