#
# This Script checks for sign of exploit from CVE-2021-26855, 26858, 26857, and 27065
#

# TODO
# fix join-path not working


#region misc
function Get-ExchangeInstallPath {
    return (Get-ItemProperty -Path Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\ExchangeServer\v15\Setup -ErrorAction SilentlyContinue).MsiInstallPath
}

function Write-Log($results, $cve) {
    $logname = (Get-Date).ToString("MM-dd-yyyy-hh-mm-ss") + "-" + $cve + ".log"
    $logfolder = $PSScriptRoot + "\logs\"
    $logpath = $logfolder + $logname

    # check if logfolder exist
    if (!(Test-Path -Path $logfolder)){
        New-Item -ItemType Directory -Path $logfolder | Out-Null
    }

    if ($cve -eq "26855"){
        $results.Hits | Export-Csv $logpath
    }
    else {
        $results >> $logpath
    }

    return $logpath
}

#endregion

#region checks
function Get-Cve26855 {

    # status: true = CRITICAL // false = OK
    $status = $false

    $exchangePath = Get-ExchangeInstallPath

    # append proxy path to exchange path
    $HttpProxyPath = Join-Path -Path $exchangePath -ChildPath "Logging/HttpProxy"
    
    # needed props
    $outProps = @(
        "DateTime", "RequestId", "ClientIPAddress", "UrlHost",
        "UrlStem", "RoutingHint", "UserAgent", "AnchorMailbox",
        "HttpStatus"
    )

    # get all log files
    $today = (Get-Date).ToString("MM/dd/yyyy")
    $files = (Get-ChildItem -Recurse -Path $HttpProxyPath -Filter "*.log").FullName

    $allResults = @{
        Hits     = [System.Collections.ArrayList]@()
        FileList = [System.Collections.ArrayList]@()
    }

    For ($i = 1; $i -lt $files.Count; $i++) {
        if ((Test-Path $files[$i]) -and (Select-String -Path $files[$i] -Pattern "ServerInfo~" -Quiet)) {

            $today = (Get-Date).ToString("yyyy-dd-MM")
            $yesterday = (Get-Date).AddDays(-1).ToString("yyyy-dd-MM")

            [Void]$allResults.FileList.Add($files[$i])

            Import-Csv -Path $files[$i] -ErrorAction SilentlyContinue |
            Where-Object { $_.AnchorMailbox -Like 'ServerInfo~*/*' -and $_.AnchorMailbox -notlike 'ServerInfo~*/autodiscover*' -and $_.AnchorMailbox -notlike 'ServerInfo~localhost*/*' } |
                Select-Object -Property $outProps |
                ForEach-Object {

                    $timearr = $_.DateTime.Split("-").Split("T")
                    $logday = $timearr[0] + "-" + $timearr[1] + "-" + $timearr[2]

                    if ($logday -eq $today -or $logday -eq $yesterday) {
                        [Void]$allResults.Hits.Add($_)
                    }
                }
        }
    }

    return $allResults
}

function Get-Cve26857 {
    $eventLogs = Get-WinEvent -FilterHashtable @{
        LogName = "Application"
        ProviderName = "MSExchange Unified Messaging"
        Level = "2"
    } -ErrorAction SilentlyContinue | Where-Object { $_.Message -like "*System.InvalidCastException*" }

    return $eventLogs
}

function Get-Cve26858 {
    $exchangePath = Get-ExchangeInstallPath
    $p = Get-ChildItem -Recurse -Path "$exchangePath\Logging\OABGeneratorLog" | Select-String "Download failed and temporary file" -List | Select-Object -ExpandProperty Path
    return $p
}

function Get-Cve27065 {
    $exchangePath = Get-ExchangeInstallPath
    $results = [System.Collections.ArrayList]@()
    $today = (Get-Date).ToString("yyyyMMdd")
    $yesterday = (Get-Date).AddDays(-1).ToString("yyyyddMM")

    Get-ChildItem -Recurse -Path "$exchangePath\Logging\ECP\Server\*.log" -ErrorAction SilentlyContinue | Select-String "Set-.+VirtualDirectory" -List | Select-Object -ExpandProperty Path |
    ForEach-Object {
        $logday = $_.Split(".")[-2].Split("\")[-1].Split("-")[0] -replace "[ECPServer]", ""
        if ($logday -eq $today -or $logday -eq $yesterday) {
            	[Void]$results.Add($_)
        }
    }
    return $results
}
#endregion

#region run checks
$unsafe = $false
$written_logs = @()

Set-Location $PSScriptRoot


$check26855 = Get-Cve26855
if ($check26855.Hits.Count -gt 0){
    $unsafe = $true
    $log = Write-Log $check26855 "26855"
    $written_logs = $written_logs + $log
}

$check26857 = Get-Cve26857
if ($null -ne $check26857){
    $unsafe = $true
    Write-Log $check26857 "26857"
    $written_logs = $written_logs + $log
}

$check26858 = Get-Cve26858
if ($null -ne $check26858){
    $unsafe = $true
    $log = Write-Log $check26858 "26858"
    $written_logs = $written_logs + $log
}

$check27065 = Get-Cve27065
if ($check27065.Count -gt 0){
    $unsafe = $true
    $log = Write-Log $check27065 "27065"
    $written_logs = $written_logs + $log
}
#endregion

#region return icinga
if ($unsafe) {
    Write-Host "CRITICAL: Please review the following logfiles:"
    Write-Host $written_logs
    exit 2
}
else {
    Write-Host "OK"
    exit 0
}
#endregion